name: Project 3 - CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/**'
      - '.github/workflows/project3-ci-cd.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/**'
  workflow_dispatch:  # Allow manual triggering

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd "Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend"
        npm ci
        
    - name: Run ESLint
      run: |
        cd "Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend"
        npm run lint
        
    - name: Run tests
      run: |
        cd "Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend"
        npm run test
        
    - name: Build application
      run: |
        cd "Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend"
        npm run build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend/dist/

  security-scan:
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd "Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend"
        npm ci
        
    - name: Run npm audit
      run: |
        cd "Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend"
        npm audit --audit-level moderate
        
    # - name: Install Trivy
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y wget
    #     wget -qO trivy.tar.gz https://github.com/aquasecurity-64bit.tar.gz
    #     trivy /usr/local/bin
    #     sudo mv trivy /usr/local/bin

                                                              
    # - name: Run Trivy scan
    #   run: |
    #     trivy fs . --format sarif --output trivy-results.sarif

    # - name: Upload SARIF file
    #   uses: github/codeql-action/upload-sarif@v3
    #   with:
    #     sarif_file: trivy-results.sarif

  deploy:
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd "Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend"
        npm ci
        
    - name: Build for production
      env:
        REACT_APP_COMMIT_HASH: ${{ github.sha }}
        REACT_APP_BUILD_TIME: ${{ github.event.head_commit.timestamp }}
        NODE_ENV: production
      run: |
        cd "Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend"
        npm run build
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: Project_3_CICD_Workflow_with_GitHub_Actions_+_GitHub_Pages_Hosting/frontend/dist
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Post deployment notification
      run: |
        echo "ðŸš€ Project 3 deployment successful!"
        echo "ðŸ“¦ Site deployed to: ${{ steps.deployment.outputs.page_url }}"
