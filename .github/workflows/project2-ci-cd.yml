name: Project 2 - AI Web App CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Project_2_AI_Augmented_Web_App_Using_FastAPI_+_GPT_+_SQLite_+_Pybind11_(C++)/**'
      - '.github/workflows/project2-ci-cd.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Project_2_AI_Augmented_Web_App_Using_FastAPI_+_GPT_+_SQLite_+_Pybind11_(C++)/**'
  workflow_dispatch:  # Allow manual triggering

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake pybind11-dev
        
    - name: Install Python dependencies
      run: |
        cd "Project_2_AI_Augmented_Web_App_Using_FastAPI_+_GPT_+_SQLite_+_Pybind11_(C++)"
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build C++ extension
      run: |
        cd "Project_2_AI_Augmented_Web_App_Using_FastAPI_+_GPT_+_SQLite_+_Pybind11_(C++)"
        python setup.py build_ext --inplace
        
    - name: Run tests
      run: |
        cd "Project_2_AI_Augmented_Web_App_Using_FastAPI_+_GPT_+_SQLite_+_Pybind11_(C++)"
        python -m pytest tests/ -v || echo "No tests found, skipping..."
        
    - name: Test FastAPI application
      run: |
        cd "Project_2_AI_Augmented_Web_App_Using_FastAPI_+_GPT_+_SQLite_+_Pybind11_(C++)"
        python -c "import main; print('FastAPI app imports successfully')"
        
    - name: Security scan with bandit
      run: |
        cd "Project_2_AI_Augmented_Web_App_Using_FastAPI_+_GPT_+_SQLite_+_Pybind11_(C++)"
        pip install bandit
        bandit -r . -f json -o bandit-report.json || true
        
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: Project_2_AI_Augmented_Web_App_Using_FastAPI_+_GPT_+_SQLite_+_Pybind11_(C++)/bandit-report.json

  docker-build:
    runs-on: ubuntu-latest
    needs: test-and-build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        cd "Project_2_AI_Augmented_Web_App_Using_FastAPI_+_GPT_+_SQLite_+_Pybind11_(C++)"
        docker build -t project2-ai-web-app .
        
    - name: Test Docker image
      run: |
        cd "Project_2_AI_Augmented_Web_App_Using_FastAPI_+_GPT_+_SQLite_+_Pybind11_(C++)"
        docker run --rm -d -p 8000:8000 --name test-container project2-ai-web-app
        sleep 10
        curl -f http://localhost:8000/health || curl -f http://localhost:8000/ || echo "Health check failed"
        docker stop test-container
        
    - name: Save Docker image
      run: |
        docker save project2-ai-web-app | gzip > project2-image.tar.gz
        
    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: project2-image.tar.gz
        retention-days: 7
